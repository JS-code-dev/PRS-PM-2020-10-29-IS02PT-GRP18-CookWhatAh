# -*- coding: utf-8 -*-

#Information of Original Author
"""duplicate_image_remove.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/17q-vNL4HQoKg7907A4SogxPYImqJlMD-
Author: UrviSoni
Github Reference: https://github.com/UrviSoni/remove_duplicate_image/blob/master/duplicate_image_remove.py
"""
#Code has been adapted for our usage


import os, argparse
import hashlib

######################################################
############### ARGUMENT PARSER ######################
######################################################
ap = argparse.ArgumentParser()
ap.add_argument("-d", "--directory", required=True,
                help='Directory Path of the Image Folder')
args = vars(ap.parse_args())


######################################################
##################### VARIABLES ######################
######################################################
DIR_PATH = args['directory']


######################################################
##################### HASHING ########################
######################################################
def file_hash(filepath):
    with open(filepath, 'rb') as f:
        return md5(f.read()).hexdigest()


######################################################
################ REMOVING DUPLCATES ##################
######################################################
os.chdir(DIR_PATH)
print(f"Directory Selected: {os.getcwd()}")

file_list = os.listdir()
print(f"Number of Images in file: {len(file_list)}")


duplicates = []
hash_keys = dict()
for index, filename in  enumerate(os.listdir('.')):  #listdir('.') = current directory
    if os.path.isfile(filename):
        with open(filename, 'rb') as f:
            filehash = hashlib.md5(f.read()).hexdigest()
        if filehash not in hash_keys: 
            hash_keys[filehash] = filename
        else:
            duplicates.append((filename,hash_keys[filehash]))
print(len(duplicates))
print()
print("Press y to to delete duplicates")
user_response = input()

if user_response.lower() == "y":
    i = 0
    for image in duplicates:
        i += 1
        path = os.path.join(DIR_PATH, image[0])
        os.remove(path)
        print(f"{i}: {path} removed")